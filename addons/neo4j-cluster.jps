---
type: update
version: 1.5
id: storage
name: Neo4J Cluster for Kubernetes
skipNodeEmails: true

globals:
  neo4jrepo: https://github.com/neo4j-contrib/kubernetes-neo4j.git
  password: ${settings.password:[fn.password]}
  cores: ${settings.cores}
  replicas: ${settings.replicas}
  cluster-dns: 10.244.0.10
  
settings:
  fields:
    - caption: Env Name  
      type: envname
      name: envName
      dependsOn: region
      randomName: true
      showFullDomain: true
      required: true    
    - caption: Region
      type: regionlist
      name: region
      disableInactive: true
      selectFirstAvailable: true
      filter:
        type: ["vz7"]
        isActive: true

onInstall:
    - addNodes:
        nodeType: docker
        cloudlets: 16
        dockerName: jelastic/storage
        dockerTag: latest
        displayName: Storage
        nodeGroup: storage
        metadata:
          layer: storage
    - mount: cp
    - mount: master
    - connect-storage
    - install-neo4j
    - install:
        envName: ${settings.envName} 
        nodeGroup: cp
        jps:
          type: update
          name: Horizontal Scaling for Node4J Cluster
          id: scale
          targetNodes:
            nodeGroup: cp
          settings: 
            scale:
              fields:
                - type: spinner
                  name: cores2
                  caption: Cores
                  min: 3
                  max: 5
                  default: ${settings.cores}
                - type: spinner
                  name: replicas2
                  caption: Replicas
                  min: 1
                  max: 5
                  default: ${settings.replicas}
          buttons: 
            settings: scale
            action: scale
            caption: Scaling
            submitButtonText: Apply  
          actions:
            scale: 
              cmd[master]: |-
                kubectl scale statefulsets neo4j-core --replicas  ${settings.cores2}
                kubectl scale deployment neo4j-replica  --replicas ${settings.replicas2} 

actions:
  connect-storage:
    cmd[master]: |-
     mkdir -p /data/pv01 /data/pv02 /data/pv03 /data/pv04 /data/pv05
     kubectl apply -f ${baseUrl}/persistent-storage-neo4j.yaml

  install-neo4j:
    cmd[master]: |-
     yum install -y git nc
     git clone ${globals.neo4jrepo}
     while $(! nc -vz ${globals.cluster-dns} 53) ;do sleep 1s; done
     sed -i '1s/^/nameserver 10.244.0.10\n /'  /etc/resolv.conf
     cd kubernetes-neo4j && kubectl apply -f cores && kubectl apply -f read-replicas
     wget ${baseUrl}/neo4j-ingress.yaml -O /tmp/neo4j-ingress.yaml
     sed -i 's/*.demo.jelastic.com/${env.domain}/g' /tmp/neo4j-ingress.yaml
     kubectl apply -f /tmp/neo4j-ingress.yaml
     kubectl apply -f ${baseUrl}/neo4j-bolt.yaml
     kubectl scale statefulsets neo4j-core --replicas  ${globals.cores}
     kubectl scale deployment neo4j-replica  --replicas ${globals.replicas}
     while $(! kubectl logs neo4j-core-0 | grep -q Started) ;do sleep 1s; done
     kubectl exec neo4j-core-0 -- bin/neo4j-admin set-initial-password ${globals.password}


  mount:
    env.file.AddMountPointByGroup:
      nodeGroup: ${this}
      sourceNodeId: ${nodes.storage.master.id}
      protocol: nfs
      path: /data
      sourcePath: /data
      name: Shared Storage
      readOnly: false
